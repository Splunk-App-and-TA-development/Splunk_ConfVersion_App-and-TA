# splunk TA - TA_Splunk-ConfVersion
# default/macros.conf
# Â© 2017-2021 SwissTXT Security
###################################################
# ----------------------------------------------- #
# Configuration Monitoring TA for Splunk.         #
# ----------------------------------------------- #
# Splunk Add-on to monitor and parse Splunk       #
# configuration files. It allows administrators   #
# to quickly identify changes in Splunk's         #
# configuration.                                  #
# ----------------------------------------------- #
#         >> Macros declarations <<               #
###################################################

# This macro tells the dashboards and searches where to find the indexed conf data
[conf_files_index]
definition = (index = splunk_confchange)

# Can be used to convert the "conf_data" field to an mvfield
# Note: Usually "normalize_multiline_values" should be ran before this
[confdata2mv]
definition = makemv tokenizer="^([^\r\n]+)([\r\n]+|$)" conf_data
iseval = 0

# Filters down lots of results to just the most recent ones.
# In effect, this eliminates all historical data and only shows the most recent version of a stanza.
# This macro maintains the ordering of events at the cost of performance. Use "mostrecent_uo" if order of events is not important.
# Warning: If the search did not include "include_deletions(4)", this will show stanzas that have been deleted.
[mostrecent]
definition = streamstats count as sort_order\
| sort - _time\
| eval conf_stanza=if(like(conf_stanza, "%"), conf_stanza, "null")\
| streamstats count as rev_ver by host, source, conf_stanza\
| search rev_ver=1\
| sort sort_order\
| fields - rev_ver sort_order
iseval = 0

# Read documentation for "mostrecent"
[mostrecent_uo]
definition = sort - _time\
| eval conf_stanza=if(like(conf_stanza, "%"), conf_stanza, "null")\
| streamstats count as rev_ver by host, source, conf_stanza\
| search rev_ver=1\
| fields - rev_ver
iseval = 0

# This macro processed the contents of "conf_data" such that any values spanning
# more than one line are concatenated onto a single line.
[normalize_multiline_values]
definition = rex field=conf_data mode=sed "s/\\\\[\r\n]+//g"
iseval = 0

# Keep only those events that have the latest modified time.
# Useful when processing stanzas from a single file (as they will all have the same mod time for any given ingestion)
[latest]
definition = eventstats latest(_time) as latest_file_time by host, source\
| where latest_file_time=_time\
| fields - latest_file_time
iseval = 0

# This macro should be used in the initial search filter.
# It will bring in events from the _audit log, allowing the app to identify removed files.
[include_deletions(4)]
args = host,conf_app,conf_context,conf_file
definition = OR (index=_audit action=delete host="$host$" path="*/$conf_app$/$conf_context$/$conf_file$")
